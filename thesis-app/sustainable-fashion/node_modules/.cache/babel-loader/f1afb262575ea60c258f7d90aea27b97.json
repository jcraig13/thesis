{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"slider\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"days-slider\"\n}, \"Number of forecasts to show:\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = [\"height\", \"width\"];\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"g\", {\n  class: \"bars\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = [_hoisted_4];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_slider = _resolveComponent(\"el-slider\");\n\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _createVNode(_component_el_slider, {\n    min: 3,\n    max: 14,\n    modelValue: $data.days,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.days = $event),\n    \"show-input\": \"\",\n    \"show-stops\": \"\"\n  }, null, 8\n  /* PROPS */\n  , [\"modelValue\"]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tags, tag => {\n    return _openBlock(), _createBlock(_component_el_tag, {\n      key: tag.name,\n      class: \"mx-1\",\n      closable: \"\",\n      type: tag.type\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(tag.name), 1\n      /* TEXT */\n      )]),\n      _: 2\n      /* DYNAMIC */\n\n    }, 1032\n    /* PROPS, DYNAMIC_SLOTS */\n    , [\"type\"]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _createElementVNode(\"div\", null, _toDisplayString($data.shortForecast), 1\n  /* TEXT */\n  ), (_openBlock(), _createElementBlock(\"svg\", {\n    height: $props.height,\n    width: $props.width\n  }, _hoisted_5, 8\n  /* PROPS */\n  , _hoisted_3))]);\n}","map":{"version":3,"mappings":";;AAESA,OAAK,EAAC;;;gCACTC,oBAA6D,OAA7D,EAA6D;AAAtDC,KAAG,EAAC;AAAkD,CAA7D,EAAyB,8BAAzB,EAAqD;AAAA;AAArD;;;;gCAcAD,oBAAkB,GAAlB,EAAkB;AAAfD,OAAK,EAAC;AAAS,CAAlB,EAAe,IAAf,EAAe;AAAA;AAAf;;oBAAAG;;;;;;uBAhBJC,oBAkBM,KAlBN,EAkBM,IAlBN,EAkBM,CAjBJH,oBAYM,KAZN,cAYM,CAXJI,UAWI,EAVJC,aAAqEC,oBAArE,EAAqE;AAAzDC,OAAG,EAAE,CAAoD;AAAhDC,OAAG,EAAE,EAA2C;gBAA9BC,UAA8B;+DAA9BA,aAAIC,OAA0B;AAAxB,oBAAwB;AAAb;AAAa,GAArE;;AAAA,mBAUI,qBATJP,oBAQSQ,SART,EAQS,IART,EAQSC,YAPOH,UAOP,EAPAI,GAAW,IAAR;yBADZC,aAQSC,iBART,EAQS;AANNC,SAAG,EAAEH,GAAG,CAACI,IAMH;AALPlB,WAAK,EAAC,MAKC;AAJPmB,cAAQ,EAAR,EAIO;AAHNC,UAAI,EAAEN,GAAG,CAACM;AAGJ,KART;wBAOE,MAAc,mCAAXN,GAAG,CAACI,OAAI;AAAA;OAAG;;;;KAPhB;;AAAA;GAQS,CART;;AAAA,GASI,EAZN,CAiBI,EAJJjB,oBAA8B,KAA9B,EAA8B,IAA9B,EAA8BoB,iBAAtBX,mBAAsB,CAA9B,EAAqB;AAAA;AAArB,GAII,iBAHJN,oBAEM,KAFN,EAEM;AAFAkB,UAAM,EAAEC,aAER;AAFiBC,SAAK,EAAED;AAExB,GAFN;;AAAA,eAGI,EAlBN","names":["class","_createElementVNode","for","_hoisted_4","_createElementBlock","_hoisted_2","_createVNode","_component_el_slider","min","max","$data","$event","_Fragment","_renderList","tag","_createBlock","_component_el_tag","key","name","closable","type","_toDisplayString","height","$props","width"],"sourceRoot":"","sources":["/Users/juliet/Documents/GitHub/thesis/thesis-app/sustainable-fashion/src/components/Countries.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"slider\">\n      <label for=\"days-slider\">Number of forecasts to show:</label>\n      <el-slider :min=\"3\" :max=\"14\" v-model=\"days\" show-input show-stops />\n      <el-tag\n        v-for=\"tag in tags\"\n        :key=\"tag.name\"\n        class=\"mx-1\"\n        closable\n        :type=\"tag.type\"\n      >\n        {{ tag.name }}\n      </el-tag>\n    </div>\n    <div>{{ shortForecast }}</div>\n    <svg :height=\"height\" :width=\"width\">\n      <g class=\"bars\" />\n    </svg>\n  </div>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\n\nconst margin = 20;\n\nconst DEFAULT_FORECAST = \"Hover for Forecast\";\n\nexport default {\n  name: \"Countries\",\n  data() {\n    return {\n      days: 7,\n      shortForecast: DEFAULT_FORECAST,\n      tags: [\n        { name: 'Tag 1', type: '' },\n        { name: 'Tag 2', type: 'success' },\n        { name: 'Tag 3', type: 'info' },\n        { name: 'Tag 4', type: 'warning' },\n        { name: 'Tag 5', type: 'danger' },\n      ]\n    };\n  },\n  props: {\n    data: Array,\n    height: Number,\n    width: Number,\n  },\n  computed: {\n    xScale() {\n      return d3\n        .scaleBand()\n        .padding(0.1)\n        .domain(this.data.map((d) => d.name))\n        .range([0, this.width]);\n    },\n    yScale() {\n      return d3\n        .scaleLinear()\n        .domain([\n          Math.min(\n            0,\n            d3.min(this.data, (d) => d.temperature)\n          ),\n          d3.max(this.data, (d) => d.temperature),\n        ])\n        .range([0, this.height - margin]);\n    },\n    rectWidth() {\n      return this.xScale.bandwidth();\n    },\n  },\n  updated() {\n    const that = this;\n    d3.select(\".bars\")\n      .selectAll(\"g.bar\")\n      .data((this.data || []).slice(0, this.days))\n      .join(\n        (enter) => {\n          const bar = enter.append(\"g\").attr(\"class\", \"bar\");\n          const rect = bar\n            .append(\"rect\")\n            .attr(\"width\", this.rectWidth)\n            .attr(\"height\", 0)\n            .attr(\"y\", this.height)\n            .attr(\"x\", (d) => this.xScale(d.name))\n            .attr(\"fill\", \"lightblue\");\n          rect\n            .transition()\n            .delay((_, i) => i * 50)\n            .attr(\"y\", (d) => this.height - this.yScale(d.temperature))\n            .attr(\"height\", (d) => this.yScale(d.temperature));\n\n          const nameText = bar\n            .append(\"text\")\n            .attr(\"class\", \"name-text\")\n            .attr(\"y\", this.height + this.rectWidth)\n            .attr(\"x\", (d) => this.xScale(d.name))\n            .attr(\n              \"transform\",\n              (d) => `rotate(-90 ${this.xScale(d.name)} ${this.height})`\n            )\n            .attr(\"opacity\", 0)\n            .text((d) => d.name);\n          nameText.transition().attr(\"opacity\", 1);\n\n          const tempText = bar\n            .append(\"text\")\n            .attr(\"class\", \"temp-text\")\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"x\", (d) => this.xScale(d.name) + this.rectWidth / 2)\n            .attr(\"y\", this.height)\n            .text((d) => d.temperature);\n          tempText\n            .transition()\n            .delay((_, i) => 100 + i * 50)\n            .attr(\"y\", (d) => this.height - this.yScale(d.temperature) - 5);\n\n          return bar;\n        },\n        (update) => {\n          update\n            .select(\"rect\")\n            .attr(\"fill\", \"lightgreen\")\n            .attr(\"width\", this.rectWidth)\n            .attr(\"x\", (d) => this.xScale(d.name));\n          update\n            .select(\".name-text\")\n            .attr(\"y\", this.height + this.rectWidth)\n            .attr(\"x\", (d) => this.xScale(d.name))\n            .attr(\n              \"transform\",\n              (d) => `rotate(-90 ${this.xScale(d.name)} ${this.height})`\n            );\n          update\n            .select(\".temp-text\")\n            .attr(\"x\", (d) => this.xScale(d.name) + this.rectWidth / 2);\n          return update;\n        },\n        (exit) => {\n          exit\n            .select(\"rect\")\n            .transition()\n            .attr(\"height\", 0)\n            .attr(\"y\", this.height)\n            .on(\"end\", () => {\n              exit.remove();\n            });\n          exit.select(\"text\").transition().attr(\"opacity\", 0);\n        }\n      )\n      .on(\"mouseenter\", (event, d) => {\n        that.shortForecast = d.shortForecast;\n      })\n      .on(\"mouseleave\", () => {\n        that.shortForecast = DEFAULT_FORECAST;\n      });\n  },\n};\n</script>\n\n<style>\n.slider {\n  max-width: 50%;\n  margin: 0 auto;\n}\ninput[type=\"range\"]::-webkit-slider-thumb {\n  cursor: ew-resize; /* grab */\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}